#pragma once

#include <stdint.h>

enum CRO : uint64_t
{
    CR0_PROTECTED_MODE = 1 << 0,
    CR0_MONITOR_COPROCESSOR = 1 << 1,
    CR0_EMULATION = 1 << 2,
    CR0_TASK_SWITCHED = 1 << 3,
    CR0_EXTENSION_TYPE = 1 << 4,
    CR0_NUMERIC_ERROR = 1 << 5,
    CR0_WRITE_PROTECT = 1 << 16,
    CR0_ALIGNMENT_MASK = 1 << 18,
    CR0_NOT_WRITE_THROUGH = 1 << 29,
    CR0_CACHE_DISABLE = 1 << 30,
    CR0_PAGING = 1 << 31,
};

enum CR4 : uint64_t
{
    CR4_VIRTUAL_MODE = 1 << 0,
    CR4_PROTECTED_MODE_VIRTUAL_INTERRUPTS = 1 << 1,
    CR4_TIME_STAMP_DISABLE = 1 << 2,
    CR4_DEBUGGING_EXTENSIONS = 1 << 3,
    CR4_PAGE_SIZE_EXTENSIONS = 1 << 4,
    CR4_PHYSICAL_ADDRESS_EXTENSION = 1 << 5,
    CR4_MACHINE_CHECK_ENABLE = 1 << 6,
    CR4_PAGE_GLOBAL_ENABLE = 1 << 7,
    CR4_PERFORMANCE_MONITORING_COUNTER_ENABLE = 1 << 8,
    CR4_OSFXSR = 1 << 9,
    CR4_OSXMMEXCPT_ENABLE = 1 << 10,
    CR4_USER_MODE_INSTRUCTION_PREVENTION = 1 << 11,
    CR4_VIRTUAL_MACHINE_EXTENSIONS = 1 << 13,
    CR4_SAFER_MODE_EXTENSIONS = 1 << 14,
    CR4_FGSBASE_ENABLED = 1 << 16,
    CR4_PCIDE_ENABLE = 1 << 17,
    CR4_OSXSAVE_ENABLE = 1 << 18,
    CR4_SMEP_ENABLE = 1 << 20,
    CR4_SMAP_ENABLE = 1 << 21,
    CR4_PROTECTION_KEY_ENABLE = 1 << 22,
    CR4_CONTROL_FLOW_ENFORCEMENT = 1 << 23,
    CR4_PROTECTION_KEY_SUPERVISOR_PAGE = 1 << 24,
};

enum XCR0 : uint64_t
{
    XCR0_x87 = 1 << 0,
    XCR0_SSE = 1 << 1,
    XCR0_AVX = 1 << 2,
    XCR0_BNDREGS = 1 << 3,
    XCR0_BNDCSR = 1 << 4,
    XCR0_OPMASK = 1 << 5,
    XCR0_ZMM_Hi256 = 1 << 6,
    XCR0_Hi16_ZMM = 1 << 7,
    XCR0_PKRU = 1 << 9,
};

enum RFlags : uint64_t
{
    RFLAGS_CARRY = 1 << 0,
    RFLAGS_RESERVED1 = 1 << 1,
    RFLAGS_PARITY = 1 << 2,
    RFLAGS_RESERVED2 = 1 << 3,
    RFLAGS_AUXILIARY_CARRY = 1 << 4,
    RFLAGS_RESERVED3 = 1 << 5,
    RFLAGS_ZERO = 1 << 6,
    RFLAGS_SIGN = 1 << 7,
    RFLAGS_TRAP = 1 << 8,
    RFLAGS_INTERRUPT_ENABLE = 1 << 9,
    RFLAGS_DIRECTION = 1 << 10,
    RFLAGS_OVERFLOW = 1 << 11,
    RFLAGS_IO_PRIVILEGE_LEVEL = 1 << 12,
    RFLAGS_NESTED_TASK = 1 << 14,
    RFLAGS_RESERVED4 = 1 << 15,
    RFLAGS_RESUME = 1 << 16,
    RFLAGS_VIRTUAL_8086_MODE = 1 << 17,
    RFLAGS_ALIGNMENT_CHECK = 1 << 18,
    RFLAGS_VIRTUAL_INTERRUPT = 1 << 19,
    RFLAGS_VIRTUAL_INTERRUPT_PENDING = 1 << 20,
    RFLAGS_ID = 1 << 21,
    RFLAGS_RESERVED5 = 1 << 22,
};

